version: '3'

services:
  broker:
    build:
      context: broker
    image: kromlab_broker
    container_name: kromlab_broker
    networks:
      - internal

  result_backend:
    build:
      context: result_backend
    image: kromlab_result_backend
    container_name: kromlab_result_backend
    networks:
      - internal

  worker:
    build:
      context: worker
      args:
        - USERNAME=${USERNAME:-danh}
    image: kromlab_worker
    container_name: kromlab_worker
    environment:
      - PYTHONPATH=/home/${USERNAME:-danh}/workspace
    volumes:
      - ${PROJECT_DIR}/src:/home/${USERNAME:-danh}/workspace/src
    command: >
      bash -c "
      source /home/${USERNAME:-danh}/miniconda3/bin/activate &&
      conda activate de &&
      cd /home/${USERNAME:-danh}/workspace/ &&
      celery -A src.app.shape worker -l INFO"
    networks:
      - internal

  client:
    image: kromlab_worker
    depends_on:
      - worker
    container_name: kromlab_client
    environment:
      - FLASK_APP=main
      - PYTHONPATH=/home/${USERNAME:-danh}/workspace
    volumes:
      - ${PROJECT_DIR}/src:/home/${USERNAME:-danh}/workspace/src
    command: >
      bash -c "
      source /home/${USERNAME:-danh}/miniconda3/bin/activate &&
      conda activate de &&
      cd /home/${USERNAME:-danh}/workspace/src/client &&
      flask run --host=0.0.0.0"
    ports:
      - "5000:5000"
    networks:
      - internal

  database:
    build:
      context: database
    image: kromlab_database
    container_name: kromlab_database
    environment:
      - POSTGRES_USER=kromlab
      - POSTGRES_PASSWORD=kromlab
      - POSTGRES_DB=kromlab
    volumes:
      - ${DATABASE_DIR:-postgres-db-volume}:/var/lib/postgresql/data
    networks:
      - internal

networks:
  internal:
    name: kromlab-internal
